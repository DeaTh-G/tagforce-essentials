_C0 Enable Voice Acting
// Enable Voice Acting in Shop
_L 0xD09B9F52 0x00005440
_L 0x009B9F53 0x00000050
// Enable Voice Acting during Gameplay
_L 0x0006559F 0x00000004
// Enable Voice Acting on Title Screen
_L 0xD06F4B32 0x00005440
_L 0x006F4B33 0x00000004

_C0 Enable Japanese Point Gauge
// Change duel path to Memory Stick
_L 0x200EE150 0x3A30736D
_L 0x200EE154 0x5053502F
_L 0x200EE158 0x444F4D2F
_L 0x200EE15C 0x41542F53
_L 0x200EE160 0x524F4647
_L 0x200EE164 0x642F4543

_L 0xD1257C46 0x00005440
_L 0x01257C47 0x00000050

_L 0xD1259236 0x00005440
_L 0x01259237 0x00000050

_L 0xD125A34E 0x00005440
_L 0x0125A34F 0x00000050

_L 0xD125A51E 0x00005440
_L 0x0125A51F 0x00000050

_L 0xD125A742 0x00005440
_L 0x0125A743 0x00000050

_C0 Uncensored Cards
_L 0x2001128C 0x0A222F40 // Jump to new address to execute custom code
_L 0x2008BD00 0x00A0D821 // Store a1 in k1
_L 0x2008BD04 0x0080C821 // Store a0 in t9
_L 0x2008BD08 0x03E0C021 // Store ra in t8
_L 0x2008BD0C 0x3C0E0880 // Store 0x08800000 in t6
_L 0x2008BD10 0x3C0F0A00 // Store 0x0A000000 in t7
_L 0x2008BD14 0x024E102A // Check if s2 is less than t6
_L 0x2008BD18 0x1440002C // Jump out if it is
_L 0x2008BD1C 0x024F102A // Check if s2 is less than t7
_L 0x2008BD20 0x14400001 // Continue custom code if it is
_L 0x2008BD24 0x0A2224FF // Jump out if it isn't
_L 0x2008BD28 0x3C050888 // Load %hi of "card/card" into a1
_L 0x2008BD2C 0x02402021 // Load currently being looked up filename from s2 into a0
_L 0x2008BD30 0x24060009 // Store 0x9 in a2 (we use this to compare only up to "card/card" so that every permutation gets loaded from memstick)
_L 0x2008BD34 0x0E203726 // Call memcmp
_L 0x2008BD38 0x24A5BE80 // Load %lo of "card/card" into a1
_L 0x2008BD3C 0x10400029 // Jump out to address if result of memcmp is 0
_L 0x2008BD40 0x3C050888 // Load %hi of "deck/all_" into a1
_L 0x2008BD44 0x02402021 // Load currently being looked up filename from s2 into a0
_L 0x2008BD48 0x0E204486 // Call strcmp
_L 0x2008BD4C 0x24A5BE8C // Load %lo of "deck/all_" into a1
_L 0x2008BD50 0x1040001E // Jump out to address if result of strcmp is 0
_L 0x2008BD54 0x24060009 // Store 0x9 in a2 (we use this to compare only up to "deck/all_" so that every permutation gets loaded from memstick)
_L 0x2008BD58 0x2484FFF6 // Restore a0's original value by shifting it back by 10 bytes
_L 0x2008BD5C 0x0E203726 // Call memcmp
_L 0x2008BD60 0x24A5FFF6 // Restore a1's original value by shifting it back by 10 bytes
_L 0x2008BD64 0x1040001F // Jump out to address if result of memcmp is 0
_L 0x2008BD68 0x3C050888 // Load %hi of "movie/rampart_summon_a.pmf" into a1
_L 0x2008BD6C 0x02402021 // Load currently being looked up filename from s2 into a0
_L 0x2008BD70 0x0E204486 // Call strcmp
_L 0x2008BD74 0x24A5BE98 // Load %lo of "movie/rampart_summon_a.pmf" into a1
_L 0x2008BD78 0x1040001A // Jump out to address if result of strcmp is 0
_L 0x2008BD7C 0x3C050888 // Load %hi of "movie/rampart_attack_a.pmf" into a1
_L 0x2008BD80 0x02402021 // Load currently being looked up filename from s2 into a0
_L 0x2008BD84 0x0E204486 // Call strcmp
_L 0x2008BD88 0x24A5BEB4 // Load %lo of "movie/rampart_attack_a.pmf" into a1
_L 0x2008BD8C 0x10400015 // Jump out to address if result of strcmp is 0
_L 0x2008BD90 0x3C050888 // Load %hi of "movie/cyb_summon_a.pmf" into a1
_L 0x2008BD94 0x02402021 // Load currently being looked up filename from s2 into a0
_L 0x2008BD98 0x0E204486 // Call strcmp
_L 0x2008BD9C 0x24A5BED0 // Load %lo of "movie/cyb_summon_a.pmf" into a1
_L 0x2008BDA0 0x10400010 // Jump out to address if result of strcmp is 0
_L 0x2008BDA4 0x3C050888 // Load %hi of "movie/cyb_attack_a.pmf" into a1
_L 0x2008BDA8 0x02402021 // Load currently being looked up filename from s2 into a0
_L 0x2008BDAC 0x0E204486 // Call strcmp
_L 0x2008BDB0 0x24A5BEE8 // Load %lo of "movie/cyb_attack_a.pmf" into a1
_L 0x2008BDB4 0x1040000B // Jump out to address if result of strcmp is 0
_L 0x2008BDB8 0x3C050888 // Load %hi of "movie/ouijaboard_final.pmf" into a1
_L 0x2008BDBC 0x02402021 // Load currently being looked up filename from s2 into a0
_L 0x2008BDC0 0x0E204486 // Call strcmp
_L 0x2008BDC4 0x24A5BF00 // Load %lo of "movie/ouijaboard_final.pmf" into a1
_L 0x2008BDC8 0x10400006 // Jump out to address if result of strcmp is 0
_L 0x2008BDCC 0x0300F821 // Restore ra from t8
_L 0x2008BDD0 0x03202021 // Restore a0 from t9
_L 0x2008BDD4 0x03602821 // Restore a1 from k1
_L 0x2008BDD8 0x00A41025 // Execute original instruction
_L 0x2008BDDC 0x0A2044A4 // Jump back to original address to continue code execution

_L 0x2008BDE4 0x3C050888 // Load %hi of "disc0:/PSP_GAME/USRDIR/" into a1
_L 0x2008BDE8 0x03602021 // Load currently being looked up file path from k1 into a0
_L 0x2008BDEC 0x0E204486 // Call strcmp
_L 0x2008BDF0 0x24A5BE50 // Load %lo of "disc0:/PSP_GAME/USRDIR/" into a1
_L 0x2008BDF4 0x10400001 // Jump out to address if result of strcmp is 0
_L 0x2008BDF8 0x0A225171 // Jump back in memory (Restore ra from t8)
_L 0x2008BDFC 0x3C050888 // Load %hi of stored path "ms0:/PSP/MODS/TAGFORCE/" into a1
_L 0x2008BE00 0x24BBBE68 // Load %lo of stored path "ms0:/PSP/MODS/TAGFORCE/" into a1
_L 0x2008BE04 0x0A225171 // Jump back in memory (Restore ra from t8)

// Change "FINAL" to "DEATH" when one of the Destiny Board/Spirit Message cards are played.
_L 0xD1222850 0x00000001
_L 0x01222850 0x00000007

// Store "disc0:/PSP_GAME/USRDIR" in memory
_L 0x2008BE50 0x63736964
_L 0x2008BE54 0x502F3A30
_L 0x2008BE58 0x475F5053
_L 0x2008BE5C 0x2F454D41
_L 0x2008BE60 0x44525355
_L 0x2008BE64 0x002F5249

// Store "ms0:/PSP/MODS/TAGFORCE/" in memory
_L 0x2008BE68 0x3A30736D
_L 0x2008BE6C 0x5053502F
_L 0x2008BE70 0x444F4D2F
_L 0x2008BE74 0x41542F53
_L 0x2008BE78 0x524F4647
_L 0x2008BE7C 0x002F4543

// Store "card/card" in memory
_L 0x2008BE80 0x64726163
_L 0x2008BE84 0x7261632F
_L 0x2008BE88 0x00000064

// Store "deck/all_" in memory
_L 0x2008BE8C 0x6B636564
_L 0x2008BE90 0x6C6C612F
_L 0x2008BE94 0x0000005F

// Store "movie/rampart_summon_a.pmf" in memory
_L 0x2008BE98 0x69766F6D
_L 0x2008BE9C 0x61722F65
_L 0x2008BEA0 0x7261706D
_L 0x2008BEA4 0x75735F74
_L 0x2008BEA8 0x6E6F6D6D
_L 0x2008BEAC 0x702E615F
_L 0x2008BEB0 0x0000666D

// Store "movie/rampart_attack_a.pmf" in memory
_L 0x2008BEB4 0x69766F6D
_L 0x2008BEB8 0x61722F65
_L 0x2008BEBC 0x7261706D
_L 0x2008BEC0 0x74615F74
_L 0x2008BEC4 0x6B636174
_L 0x2008BEC8 0x702E615F
_L 0x2008BECC 0x0000666D

// Store "movie/cyb_summon_a.pmf" in memory
_L 0x2008BED0 0x69766F6D
_L 0x2008BED4 0x79632F65
_L 0x2008BED8 0x75735F62
_L 0x2008BEDC 0x6E6F6D6D
_L 0x2008BEE0 0x702E615F
_L 0x1008BEE4 0x0000666D

// Store "movie/cyb_attack_a.pmf" in memory
_L 0x2008BEE8 0x69766F6D
_L 0x2008BEEC 0x79632F65
_L 0x2008BEF0 0x74615F62
_L 0x2008BEF4 0x6B636174
_L 0x2008BEF8 0x702E615F
_L 0x1008BEFC 0x0000666D

// Store "movie/ouijaboard_final.pmf" in memory
_L 0x2008BF00 0x69766F6D
_L 0x2008BF04 0x756F2F65
_L 0x2008BF08 0x62616A69
_L 0x2008BF0C 0x6472616F
_L 0x2008BF10 0x6E69665F
_L 0x2008BF14 0x702E6C61
_L 0x1008BF18 0x0000666D